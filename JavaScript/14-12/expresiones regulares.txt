1° Validación: Solo Números

^[0-9]+$
var ExpRegSoloNumeros="^[0-9]+$";
 


2° Validación: Solo Letras

^[a-zA-ZñÑáéíóúÁÉÍÓÚ]+$
var ExpRegSoloLetras="^[a-zA-ZñÑáéíóúÁÉÍÓÚ]+$";



3° Validación: Letras con Espacios

^[ a-zA-ZñÑáéíóúÁÉÍÓÚ]+$
var ExpRegLetrasEspacio="^[ a-zA-ZñÑáéíóúÁÉÍÓÚ]+$";



4° Validación: Nombres y Apellidos

^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$
var ExpRegNomApe="^[A-ZÑa-zñáéíóúÁÉÍÓÚ'° ]+$";



5° Validación: Precio

^[0-9]+[.,]{1,1}\[0]{2,2}$
var ExpRegPrecio2Decimales="^[0-9]+[.,]{1,1}\[0]{2,2}$";



6° Validación: Numero Enteros y decimales

/^\d*\.\d+$/
var ExpRegNumDec=/^\d*\.\d+$/;



7° Validación: Números Enteros Positivos y Negativos

/^-?\d*(\.\d+)?$/
var ExpRegNumEntero=/^-?\d*(\.\d+)?$/;



8° Validación: Separador de Miles y Decimales

/^(?!0+\.00)(?=.{1,9}(\.|$))(?!0(?!\.))\d{1,3}(,\d{3})*(\.\d+)?$/
var ExpRegSepMiles=/^(?!0+\.00)(?=.{1,9}(\.|$))(?!0(?!\.))\d{1,3}(,\d{3})*(\.\d+)?$/;
var SepMilesValida="1,105,586.000";//Cadena de Separador de Miles y Decimales



9° Validación: Fecha (Formato dd/mm/yyyy)

/^(?:(?:(?:0?[1-9]|1\d|2[0-8])[/](?:0?[1-9]|1[0-2])|(?:29|30)[/](?:0?[13-9]|1[0-2])|31[/](?:0?[13578]|1[02]))[/](?:0{2,3}[1-9]|0{1,2}[1-9]\d|0?[1-9]\d{2}|[1-9]\d{3})|29[/]0?2[/](?:\d{1,2}(?:0[48]|[2468][048]|[13579][26])|(?:0?[48]|[13579][26]|[2468][048])00))$/

var ExpRegFecha=/^(?:(?:(?:0?[1-9]|1\d|2[0-8])[/](?:0?[1-9]|1[0-2])|(?:29|30)[/](?:0?[13-9]|1[0-2])|31[/](?:0?[13578]|1[02]))[/](?:0{2,3}[1-9]|0{1,2}[1-9]\d|0?[1-9]\d{2}|[1-9]\d{3})|29[/]0?2[/](?:\d{1,2}(?:0[48]|[2468][048]|[13579][26])|(?:0?[48]|[13579][26]|[2468][048])00))$/;



10° Validación: Horario (Formato 12 hrs.)

/((1[0-2]|0?[1-2]):([0-5][0-9]) ?([AaPp][Mm]))/
var ExpRegHora12Hrs=/((1[0-2]|0?[1-2]):([0-5][0-9]) ?([AaPp][Mm]))/;



11° Validación: Horario (Formato 24 hrs.)

/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/
var ExpRegHora24Hrs=/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;




12° Validación: Contraseña Fuerte

/(?=(.*[0-9]))(?=.*[\!@#$%^&*()\\[\]{}\-_+=|:;"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/
var ExpRegPassFuerte=/(?=(.*[0-9]))(?=.*[\!@#$%^&*()\\[\]{}\-_+=|:;"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;

var PassFuerteValida="wMH432595@";//Cadena de Contraseña Fuerte VALIDA
var PassFuerteinvalida="wMH5@";//Cadena de Contraseña Fuerte INVALIDA



13° Validación: Nombres de Usuario

/^[a-z0-9_-]{3,16}$/
var ExpRegNomUsuario=/^[a-z0-9_-]{3,16}$/;

var NomUsuarioValida="pedro-85";//Cadena de Nombres de Usuario
var NomUsuarioinvalida="pedro.85";//Cadena de Nombres de Usuario



14° Validación: Email

/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/
var ExpRegEmail=/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/;



15° Validación Dirección URL

/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/
var ExpRegURL=/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/;



16° Validación: IP v 4

/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
var ExpRegIP4=/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;



17° Validación: Color Hexadecimal

/^#?([a-f0-9]{6}|[a-f0-9]{3})$/
var ExpRegColHexa=/^#?([a-f0-9]{6}|[a-f0-9]{3})$/;



Validar un número telefónico con expresión regular de Javascript
Asignaremos una expresión regular para verificar y validar un número de teléfono:

/ ^ \ (? (\ d {3}) \)? [-]? (\ d {3}) [-]? (\ d {4}) $ /

Para comprender mejor lo que implica, aquí hay un desglose de todos los elementos.

/ ^ \ (?: Una de las formas opcionales del número puede comenzar con un paréntesis abierto.
(\ d {3}): Entonces debe incluir tres dígitos numéricos. Si no hay paréntesis, el número debe comenzar con estos dígitos, por ejemplo - (541 o 541.
\) ?: Aqui se proporciona una opción para incluir un paréntesis cerrado.
[-] ?: La cadena puede contener opcionalmente un guión después del paréntesis o después de los primeros tres dígitos.
(\ d {3}): Entonces el número debe contener otros tres dígitos. Dependiendo de sus opciones anteriores, puede verse como (541) -753, 541-753 o 541753.
[-] ?: Una vez más, puede incluir un guión opcional al final - (541) -753-, 541-753- o 541753-.
(\ d {4}) $ /: Por último, la secuencia debe terminar con una secuencia de cuatro dígitos. Puede verse como (541) -753-6010, 541-753-6010, 541753-6010 o 541753-6010.